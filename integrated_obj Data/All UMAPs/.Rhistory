setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Significant Gene Discovery")
install.packages("readxl")
install.packages("writexl")
install.packages("dplyr")
install.packages("readxl")
install.packages("writexl")
install.packages("dplyr")
library(readxl)
library(writexl)
library(dplyr)
data <- read_excel("AllMarkers.csv")
install.packages("writexl")
install.packages("dplyr")
library(dplyr)
library(writexl)
# خواندن فایل CSV
data <- read.csv("AllMarkers.csv")  # اینجا اسم فایل CSV خودت رو بذار
# بررسی مقادیر یکتای ستون cluster
clusters <- unique(data$cluster)
# ساختن یک لیست برای نگهداری داده‌های هر کلاستر
sheets <- list()
# پر کردن لیست با داده‌های جداشده بر اساس cluster
for (cl in clusters) {
sheets[[paste0("Cluster_", cl)]] <- filter(data, cluster == cl)
}
# نوشتن خروجی در یک فایل اکسل
write_xlsx(sheets, path = "clustered_output.xlsx")
library(openxlsx)
# فایل اکسل
input_file <- "clustered_output.xlsx"
output_file <- "filtered_output.xlsx"
# لیست شیت‌های موجود
sheet_names <- getSheetNames(input_file)
# باز کردن یک فایل جدید اکسل برای ذخیره نتایج فیلتر شده
wb <- createWorkbook()
# برای هر شیت، فیلتر کردن داده‌ها و ذخیره در شیت جدید
for (sheet_name in sheet_names) {
# خواندن داده‌ها از شیت فعلی
data <- read.xlsx(input_file, sheet = sheet_name)
# فیلتر کردن داده‌ها بر اساس شرایط مشخص شده
filtered_data <- subset(data,
p_val_adj < 0.05 &
avg_log2FC > 0.1 &
pct.1 > 0.5 &
(pct.1 - pct.2) > 0.3)
# اضافه کردن شیت جدید با داده‌های فیلتر شده
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = filtered_data)
}
# ذخیره کردن فایل اکسل جدید
saveWorkbook(wb, output_file, overwrite = TRUE)
library(openxlsx)
# فایل اکسل
input_file <- "clustered_output.xlsx"
output_file <- "filtered_output.xlsx"
# لیست شیت‌های موجود
sheet_names <- getSheetNames(input_file)
# باز کردن یک فایل جدید اکسل برای ذخیره نتایج فیلتر شده
wb <- createWorkbook()
# برای هر شیت، فیلتر کردن داده‌ها و ذخیره در شیت جدید
for (sheet_name in sheet_names) {
# خواندن داده‌ها از شیت فعلی
data <- read.xlsx(input_file, sheet = sheet_name)
# فیلتر کردن داده‌ها بر اساس شرایط مشخص شده
filtered_data <- subset(data,
p_val_adj < 0.05 &
avg_log2FC > 0.1 &
pct.1 > 0.1 &
(pct.1 - pct.2) > 0.1)
# اضافه کردن شیت جدید با داده‌های فیلتر شده
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = filtered_data)
}
# ذخیره کردن فایل اکسل جدید
saveWorkbook(wb, output_file, overwrite = TRUE)
library(openxlsx)
# فایل اکسل
input_file <- "clustered_output.xlsx"
output_file <- "filtered_output.xlsx"
# لیست شیت‌های موجود
sheet_names <- getSheetNames(input_file)
# باز کردن یک فایل جدید اکسل برای ذخیره نتایج فیلتر شده
wb <- createWorkbook()
# برای هر شیت، فیلتر کردن داده‌ها و ذخیره در شیت جدید
for (sheet_name in sheet_names) {
# خواندن داده‌ها از شیت فعلی
data <- read.xlsx(input_file, sheet = sheet_name)
# فیلتر کردن داده‌ها بر اساس شرایط مشخص شده
filtered_data <- subset(data,
p_val_adj < 0.05 &
avg_log2FC > 0.1 &
pct.1 > 0.1 &
(pct.1 - pct.2) > 0.1)
# اضافه کردن شیت جدید با داده‌های فیلتر شده
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = filtered_data)
}
# ذخیره کردن فایل اکسل جدید
saveWorkbook(wb, output_file, overwrite = TRUE)
setwd("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Annotation")
library(readxl)
library(openxlsx)
# مسیر فایل‌های ورودی
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
# خواندن فایل filtered_output.xlsx و استخراج ژن‌ها
filtered_data <- read.xlsx(filtered_file_path, sheet = 1)
# خواندن داده‌ها از فایل target (که در اون ژن‌ها برای هر سل تایپ ذخیره شده)
df <- read_excel(target_file_path)
# ساخت فایل اکسل جدید برای ذخیره نتایج
wb <- createWorkbook()
# برای هر کلاستر در فایل filtered_output.xlsx، ژن‌ها رو پیدا می‌کنیم و نتایج رو ذخیره می‌کنیم
clusters <- unique(filtered_data$cluster)
for (cluster_id in clusters) {
# فیلتر کردن داده‌ها برای هر کلاستر
cluster_data <- subset(filtered_data, cluster == cluster_id)
# استخراج ژن‌های این کلاستر
cluster_genes <- cluster_data$gene
# ساخت جدول برای نگهداری مارکرهای مرتبط با ژن‌های هر کلاستر
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
# برای هر ستون در داده‌های target (که مربوط به مارکرهای هر سل تایپ است)
for (col_name in colnames(df)) {
values <- df[[col_name]]
# پیدا کردن مارکرهای مشترک
matched_genes <- values[values %in% cluster_genes]
# محاسبه تعداد، درصد و ژن‌های مشترک
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
# ذخیره نتایج برای هر ستون
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
# اضافه کردن شیت جدید برای هر کلاستر
addWorksheet(wb, paste("Cluster", cluster_id))
writeData(wb, sheet = paste("Cluster", cluster_id), x = results)
}
# ذخیره کردن فایل اکسل جدید
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
# پیام موفقیت
cat("✅ فایل 'Cluster_Markers.xlsx' شامل اطلاعات کامل ذخیره شد.\n")
library(readxl)
library(openxlsx)
# مسیر فایل‌های ورودی
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
# خواندن داده‌ها از فایل filtered_output.xlsx
filtered_data_sheets <- excel_sheets(filtered_file_path)
# خواندن داده‌ها از فایل target (که در اون ژن‌ها برای هر سل تایپ ذخیره شده)
df <- read_excel(target_file_path)
# ساخت فایل اکسل جدید برای ذخیره نتایج
wb <- createWorkbook()
# برای هر شیت در فایل filtered_output.xlsx (هر شیت یک کلاستر است)
for (sheet_name in filtered_data_sheets) {
# خواندن داده‌های هر شیت (کلاستر خاص)
cluster_data <- read_excel(filtered_file_path, sheet = sheet_name)
# استخراج ژن‌های این کلاستر
cluster_genes <- cluster_data$gene
# ساخت جدول برای نگهداری مارکرهای مرتبط با ژن‌های هر کلاستر
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
# برای هر ستون در داده‌های target (که مربوط به مارکرهای هر سل تایپ است)
for (col_name in colnames(df)) {
values <- df[[col_name]]
# پیدا کردن مارکرهای مشترک
matched_genes <- values[values %in% cluster_genes]
# محاسبه تعداد، درصد و ژن‌های مشترک
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
# ذخیره نتایج برای هر ستون
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
# اضافه کردن شیت جدید برای هر کلاستر
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = results)
}
# ذخیره کردن فایل اکسل جدید
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
# پیام موفقیت
cat("✅ فایل 'Cluster_Markers.xlsx' شامل اطلاعات کامل ذخیره شد.\n")
library(readxl)
library(openxlsx)
# مسیر فایل‌های ورودی
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
# خواندن داده‌ها از فایل filtered_output.xlsx
filtered_data_sheets <- excel_sheets(filtered_file_path)
# خواندن داده‌ها از فایل target (که در اون ژن‌ها برای هر سل تایپ ذخیره شده)
df <- read_excel(target_file_path)
# ساخت فایل اکسل جدید برای ذخیره نتایج
wb <- createWorkbook()
# برای هر شیت در فایل filtered_output.xlsx (هر شیت یک کلاستر است)
for (sheet_name in filtered_data_sheets) {
# خواندن داده‌های هر شیت (کلاستر خاص)
cluster_data <- read_excel(filtered_file_path, sheet = sheet_name)
# استخراج ژن‌های این کلاستر
cluster_genes <- cluster_data$gene
# ساخت جدول برای نگهداری مارکرهای مرتبط با ژن‌های هر کلاستر
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
# برای هر ستون در داده‌های target (که مربوط به مارکرهای هر سل تایپ است)
for (col_name in colnames(df)) {
values <- df[[col_name]]
# پیدا کردن مارکرهای مشترک
matched_genes <- values[values %in% cluster_genes]
# محاسبه تعداد، درصد و ژن‌های مشترک
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
# ذخیره نتایج برای هر ستون
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
# اضافه کردن شیت جدید برای هر کلاستر
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = results)
}
# ذخیره کردن فایل اکسل جدید
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
# پیام موفقیت
cat("✅ فایل 'Cluster_Markers.xlsx' شامل اطلاعات کامل ذخیره شد.\n")
library(readxl)
library(openxlsx)
# مسیر فایل‌های ورودی
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
# خواندن داده‌ها از فایل filtered_output.xlsx
filtered_data_sheets <- excel_sheets(filtered_file_path)
# خواندن داده‌ها از فایل target (که در اون ژن‌ها برای هر سل تایپ ذخیره شده)
df <- read_excel(target_file_path)
# ساخت فایل اکسل جدید برای ذخیره نتایج
wb <- createWorkbook()
# برای هر شیت در فایل filtered_output.xlsx (هر شیت یک کلاستر است)
for (sheet_name in filtered_data_sheets) {
# خواندن داده‌های هر شیت (کلاستر خاص)
cluster_data <- read_excel(filtered_file_path, sheet = sheet_name)
# استخراج ژن‌های این کلاستر
cluster_genes <- cluster_data$gene
# ساخت جدول برای نگهداری مارکرهای مرتبط با ژن‌های هر کلاستر
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
# برای هر ستون در داده‌های target (که مربوط به مارکرهای هر سل تایپ است)
for (col_name in colnames(df)) {
values <- df[[col_name]]
# پیدا کردن مارکرهای مشترک
matched_genes <- values[values %in% cluster_genes]
# محاسبه تعداد، درصد و ژن‌های مشترک
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
# ذخیره نتایج برای هر ستون
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
# اضافه کردن شیت جدید برای هر کلاستر
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = results)
}
# ذخیره کردن فایل اکسل جدید
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
# پیام موفقیت
cat("✅ فایل 'Cluster_Markers.xlsx' شامل اطلاعات کامل ذخیره شد.\n")
library(Seurat)
library(SeuratObject)
library(ggplot2)
merged_obj2=LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/merged_obj2/merged_obj2")
merged_obj2=LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/merged_obj2")
new_cluster_ids <- c(
"CD4_EM",
"CD4_Treg",
"NK_complete",
"Gamma Delta",
"Naïve CD4 T Cells",
"CD8 cytotoxic | CD8 TRM",
"CD8 EM",
"Proliferating T cells | Cell cycle",
"CD4_Th17"
)
names(new_cluster_ids) <- levels(merged_obj2)
merged_obj2 <- RenameIdents(merged_obj2, new_cluster_ids)
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/integrated_obj Data/All UMAPs")
png(filename = "UMAP_CellType_Annotated_AllSamples.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj2,reduction = "umap",label = TRUE)
dev.off()
saveRDS(merged_obj2)
saveRDS(file = "merged_obj2",merged_obj2)
