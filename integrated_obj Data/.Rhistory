srobj_CD4 <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
srobj_CD4 <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
install.packages("SeuratData")
url <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
url <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
curl::curl_download(url, basename(url))
devtools::install_github('satijalab/seurat-data')
install.packages("devtools")
library(Seurat)
library(SeuratObject)
library(devtools)
devtools::install_github('satijalab/seurat-data')
if (!requireNamespace("remotes", quietly = TRUE))
install.packages("remotes")
remotes::install_github("mojaveazure/seurat-disk")
library(SeuratDisk)
url <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
curl::curl_download(url, basename(url))
# مسیر فایل h5ad
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
# تبدیل فایل h5ad به h5seurat
Convert(h5ad_file, dest = "h5seurat", overwrite = TRUE)
# حالا فایل h5seurat رو لود کن
seurat_obj <- LoadH5Seurat("GSE206299_ircolitis-tissue-cd4.h5seurat")
seurat_obj <- LoadH5Seurat("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5seurat")
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
?LoadH5AD
??LoadH5AD
SeuratDisk
?SeuratDisk
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
install.packages("anndata")
anndata <- import("anndata")
anndata <- reticulate::import("anndata")
anndata <- reticulate::import("anndata")
library(Seurat)
library(SeuratObject)
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
library(anndata)
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
adata = seurat_obj
genes = adata$var
genes = adata$var_names
genes
meta = adata$obs
View(meta)
mtx = adata$X
View(meta)
library(Seurat)
library(SeuratObject)
library(ggplot2)
library(rhdf5)
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
setwd("C:EsmaeilscRNA-seqSingle-Cell-Pipeline-in-RPart2")
setwd("C:/EsmaeilscRNA-seqSingle-Cell-Pipeline-in-RPart2")
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
genes_to_plot <- c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A")
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
umap_data <- Embeddings(merged_obj1)
cells_to_keep <- rownames(umap_data[umap_data[, "integratedcca_1"] >= -2, ])
umap_data <- Embeddings(merged_obj1)
cells_to_keep <- rownames(umap_data[umap_data[, "integratedcca_1"] >= -2, ])
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] >= -2, ])
umap_data
# Remove cells with an x-axis value less than -2.
umap_data <- Embeddings(merged_obj1)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] >= -2, ])
head(umap_data)
colnames(umap_data)
cells_to_keep <- rownames(umap_data[umap_data[, "integrated.cca_1"] >= -2, ])
cells_to_keep <- rownames(umap_data[umap_data[, "integrated.cca_1"] >= -2, ])
umap_data <- Embeddings(merged_obj1, reduction = "integrated.cca")
cells_to_keep <- rownames(umap_data[umap_data[, "integrated.cca_1"] >= -2, ])
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -2.
umap_data <- Embeddings(merged_obj1, reduction = "integrated.cca")
cells_to_keep <- rownames(umap_data[umap_data[, "integrated.cca_1"] >= -2, ])
View(merged_obj1)
merged_obj1@reductions[["umap"]]@cell.embeddings
merged_obj1@reductions[["umap"]]@cell.embeddings
umap_coord = \merged_obj1@reductions[["umap"]]@cell.embeddings
umap_coord = merged_obj1@reductions[["umap"]]@cell.embeddings
View(umap_coord)
View(umap_coord)
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
View(umap_coord)
cells_to_keep <- rownames(umap_coord[umap_coord[, "UMAP_1"] >= -2, ])
colnames(umap_coord)
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] >= -2, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
desired_order <- c("0", "1", "2", "3", "4")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3")
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP4.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -2.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] >= -2, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3")
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP4.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# 4
saveRDS(file = "merged_obj1",merged_obj1)
merged_obj2 = merged_obj1
# نمایش تعداد سمپل‌ها (یعنی unique values در orig.ident)
table(merged_obj2$orig.ident)
# یا فقط لیست سمپل‌ها:
unique(merged_obj2$orig.ident)
# یا فقط تعداد سمپل‌ها:
length(unique(merged_obj2$orig.ident))
samples <- unique(merged_obj2$sample_id)
colnames(merged_obj2@meta.data)
samples <- unique(merged_obj2$orig.ident)
# Looping through each sample and creating a separate Seurat object for each
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj2, subset = orig.ident == sample_name)
assign(paste0("seurat_obj_", i), seurat_obj)
}
seurat_objs <- list(seurat_obj_1, seurat_obj_2, seurat_obj_3, seurat_obj_4, seurat_obj_5,
seurat_obj_6, seurat_obj_7, seurat_obj_8, seurat_obj_9, seurat_obj_10,
seurat_obj_11, seurat_obj_12, seurat_obj_13, seurat_obj_14, seurat_obj_15,
seurat_obj_16, seurat_obj_17, seurat_obj_18, seurat_obj_19, seurat_obj_20,
seurat_obj_21, seurat_obj_22, seurat_obj_23, seurat_obj_24, seurat_obj_25,
seurat_obj_26, seurat_obj_27, seurat_obj_28, seurat_obj_29, seurat_obj_30)
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("seurat_obj_", i, ".rds"))
}
merged_obj2 <- JoinLayers(merged_obj2)
markers = FindAllMarkers(merged_obj2,min.pct = 0.1 , logfc.threshold = 0.1)
write.csv(markers,file="AllMarkers.csv")
merged_obj2 <- JoinLayers(merged_obj2)
markers = FindAllMarkers(merged_obj2,min.pct = 0.1 , logfc.threshold = 0.1)
write.csv(markers,file="AllMarkers.csv")
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3")
# تنظیم ترتیب خوشه‌ها به 0, 1, 2, 3
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
# تغییر نام خوشه‌ها به 0, 1, 2, 3
levels(merged_obj1) <- c("0", "1", "2", "3")
# کشیدن UMAP با ترتیب جدید خوشه‌ها
png(filename = "UMAP44.png", width = 10000, height = 4000, units ="px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
library(Seurat)
library(SeuratObject)
library(ggplot2)
library(rhdf5)
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
getwd()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
saveRDS(file = "merged_obj1",merged_obj1)
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -2.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] >= -2, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
saveRDS(file = "merged_obj1",merged_obj1)
merged_obj1$seurat_clusters <- recode(merged_obj1$seurat_clusters,
`0` = "1",
`4` = "2",
`5` = "3",
`7` = "4")
library(dplyr)
merged_obj1$seurat_clusters <- recode(merged_obj1$seurat_clusters,
`0` = "1",
`4` = "2",
`5` = "3",
`7` = "4")
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
library(Seurat)
library(SeuratObject)
library(ggplot2)
library(dplyr)
merged_obj1$seurat_clusters <- recode(merged_obj1$seurat_clusters,
`0` = "1",
`4` = "2",
`5` = "3",
`7` = "4")
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj1$seurat_clusters <- recode(merged_obj1$seurat_clusters,
`0` = "1",
`4` = "2",
`5` = "3",
`7` = "4")
png(filename = "UMAP44.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
levels(merged_obj1$seurat_clusters) <- c("1", "2", "3", "4")
png(filename = "UMAP44.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "4"] <- "1"
cluster_ids[cluster_ids == "5"] <- "2"
cluster_ids[cluster_ids == "7"] <- "3"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP57.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP5.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
library(Seurat)
library(SeuratObject)
library(ggplot2)
library(rhdf5)
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/4_The Seurat object obtained after UMAP and FeaturePlot/merged_obj1")
# This code changes the label of cluster cluster 4 to cluster 1 | cluster 5 to cluster 2 | cluster 7 to cluster 3
#  and then generates and saves a UMAP plot of the modified dataset.
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "4"] <- "1"
cluster_ids[cluster_ids == "5"] <- "2"
cluster_ids[cluster_ids == "7"] <- "3"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj1 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] >= -2, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code changes the label of cluster cluster 4 to cluster 1 | cluster 5 to cluster 2 | cluster 7 to cluster 3
#  and then generates and saves a UMAP plot of the modified dataset.
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "4"] <- "1"
cluster_ids[cluster_ids == "5"] <- "2"
cluster_ids[cluster_ids == "7"] <- "3"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3")
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP5.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj1 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 1 2 3 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(1,2,3,6,8,9,10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] >= -1, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code changes the label of cluster cluster 4 to cluster 1 | cluster 5 to cluster 2 | cluster 7 to cluster 3
#  and then generates and saves a UMAP plot of the modified dataset.
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "4"] <- "1"
cluster_ids[cluster_ids == "5"] <- "2"
cluster_ids[cluster_ids == "7"] <- "3"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3")
desired_order <- c("0", "1", "2", "3")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP5.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
saveRDS(file = "merged_obj1",merged_obj1)
merged_obj2 = merged_obj1
samples <- unique(merged_obj2$orig.ident)
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj2, subset = orig.ident == sample_name)
assign(paste0("seurat_obj_", i), seurat_obj)
}
# 5
# GSE206299_seurat_objs
seurat_objs <- list(seurat_obj_1, seurat_obj_2, seurat_obj_3, seurat_obj_4, seurat_obj_5,
seurat_obj_6, seurat_obj_7, seurat_obj_8, seurat_obj_9, seurat_obj_10,
seurat_obj_11, seurat_obj_12, seurat_obj_13, seurat_obj_14, seurat_obj_15,
seurat_obj_16, seurat_obj_17, seurat_obj_18, seurat_obj_19, seurat_obj_20,
seurat_obj_21, seurat_obj_22, seurat_obj_23, seurat_obj_24, seurat_obj_25,
seurat_obj_26, seurat_obj_27, seurat_obj_28, seurat_obj_29, seurat_obj_30)
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("seurat_obj_", i, ".rds"))
}
library(Seurat)
library(SeuratObject)
library(ggplot2)
merged_obj3 = LoadSeuratRds("C:\Esmaeil\scRNA-seq\Backup of Local Data and Files Not on GitHub\Part 1\5_The Seurat object obtained after FindAllMarkers/merged_obj3")
merged_obj3 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/integrated_obj Data")
png(filename = "DotPlot_Key_Markers_Across_All_Clusters.png",width = 10000,height=4000,units ="px",res = 600 )
DotPlot(merged_obj3, features = c("CD4", "CD40LG", "CD8A", "CD8B", "SELL", "CCR7", "IL7R", "CTLA4",
"FOXP3", "TNFRSF4", "TNFRSF18", "TIGIT", "IL2RA", "ICOS", "IFNG",
"STAT1", "STAT4", "TBX21", "GATA3", "STAT5", "STAT6", "IL17A", "RORA",
"LTB", "CD4A", "CD4B", "GNLY", "GZMA", "GZMB", "GZMH", "GZMK", "PRF1", "NKG7")) +
coord_flip()
dev.off()
important_markers <- c("CD4", "CD40LG", "CD8A", "CD8B", "SELL", "CCR7", "IL7R", "CTLA4",
"FOXP3", "TNFRSF4", "TNFRSF18", "TIGIT", "IL2RA", "ICOS", "IFNG",
"STAT1", "STAT4", "TBX21", "GATA3", "STAT5", "STAT6", "IL17A", "RORA",
"LTB", "CD4A", "CD4B", "GNLY", "GZMA", "GZMB", "GZMH", "GZMK", "PRF1", "NKG7")
# Filtered Key Markers from All Identified Cluster Markers
filtered_markers <- markers[markers$gene %in% important_markers, ]
merged_obj2 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/4_The Seurat object obtained after UMAP/merged_obj2")
merged_obj2 <- JoinLayers(merged_obj2)
markers = FindAllMarkers(merged_obj2,min.pct = 0.1 , logfc.threshold = 0.1)
merged_obj2 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/4_The Seurat object obtained after UMAP/merged_obj2")
merged_obj3 = merged_obj2
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 11.5, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap",label = TRUE)
dev.off()
samples <- unique(merged_obj3$orig.ident)
getwd()
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj3, subset = orig.ident == sample_name)
assign(paste0("seurat_obj_", i), seurat_obj)
}
# 6
# 6_GSE144469_seurat_objs
seurat_objs <- list(srobj_1, srobj_2, srobj_3, srobj_4, srobj_5,
srobj_6, srobj_7, srobj_8, srobj_9, srobj_10,
srobj_11, srobj_12, srobj_13, srobj_14, srobj_15,
srobj_16, srobj_17, srobj_18, srobj_19, srobj_20,
srobj_21, srobj_22)
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj3, subset = orig.ident == sample_name)
assign(paste0("srobj_", i), seurat_obj)
}
seurat_objs <- list(srobj_1, srobj_2, srobj_3, srobj_4, srobj_5,
srobj_6, srobj_7, srobj_8, srobj_9, srobj_10,
srobj_11, srobj_12, srobj_13, srobj_14, srobj_15,
srobj_16, srobj_17, srobj_18, srobj_19, srobj_20,
srobj_21, srobj_22)
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("seurat_obj_", i, ".rds"))
}
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("srobj_", i, ".rds"))
}
View(srobj_1)
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3) +
theme(legend.text = element_text(size = 8))
dev.off()
folder_path <- "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/6_GSE144469_seurat_objs"
folder_path <- "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/6_GSE144469_seurat_objs"
rds_files <- list.files(folder_path, pattern = "\\.rds$", full.names = TRUE)
for (i in seq_along(rds_files)) {
obj <- readRDS(rds_files[i])
assign(paste0("srob", i), obj)
}
folder_path1 <- "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/6_GSE144469_seurat_objs"
rds_files1 <- list.files(folder_path1, pattern = "\\.rds$", full.names = TRUE)
for (i in seq_along(rds_files1)) {
obj <- readRDS(rds_files1[i])
assign(paste0("srob", i), obj)
}
# بارگذاری آبجکت‌های Part 2
folder_path2 <- "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/5_GSE206299_seurat_objs"
rds_files2 <- list.files(folder_path2, pattern = "\\.rds$", full.names = TRUE)
offset <- length(rds_files1)  # چند فایل در Part 1 داشتیم
for (i in seq_along(rds_files2)) {
obj <- readRDS(rds_files2[i])
assign(paste0("srob", i + offset), obj)
}
View(srob1)
srob1
