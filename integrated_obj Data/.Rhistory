library(Seurat)
library(SeuratObject)
library(ggplot2)
?FindNeighbors
library(Seurat)
library(SeuratObject)
library(zellkonverter)
file_path <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adataCD4 = readH5AD(h5ad)
library(Seurat)
library(SeuratObject)
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
file_path <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adata_CD4 = readH5AD(h5ad)
file_path <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adata_CD4 = readH5AD(h5ad)
file_path <- "Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adata_CD4 = readH5AD(h5ad)
################################################################################ Start library
library(Seurat)
library(SeuratObject)
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
library(Seurat)
library(SeuratObject)
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
file_path <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adata_CD4 = readH5AD(h5ad)
system("conda --version")
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "C:/Users/z5551702/Anaconda3/condabin", sep = ";"))
Sys.setenv(PATH = paste(Sys.getenv("PATH"), "C:/Users/z5551702/Anaconda3/condabin", sep = ";"))
library(Seurat)
library(SeuratObject)
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
file_path <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
h5ad <- system.file("extdata", file_path ,package = "zellkonverter")
adata_CD4 = readH5AD(h5ad)
system("conda --version")
system("where conda")
system("conda")
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
library(Seurat)
library(SeuratObject)
library(SeuratDisk)
srobj_CD4 <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
if (!requireNamespace("remotes", quietly = TRUE))
install.packages("remotes")
remotes::install_github("mojaveazure/seurat-disk")
library(SeuratDisk)
srobj_CD4 <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
srobj_CD4 <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
install.packages("SeuratData")
url <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
url <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
curl::curl_download(url, basename(url))
devtools::install_github('satijalab/seurat-data')
install.packages("devtools")
library(Seurat)
library(SeuratObject)
library(devtools)
devtools::install_github('satijalab/seurat-data')
if (!requireNamespace("remotes", quietly = TRUE))
install.packages("remotes")
remotes::install_github("mojaveazure/seurat-disk")
library(SeuratDisk)
url <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
curl::curl_download(url, basename(url))
# مسیر فایل h5ad
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
# تبدیل فایل h5ad به h5seurat
Convert(h5ad_file, dest = "h5seurat", overwrite = TRUE)
# حالا فایل h5seurat رو لود کن
seurat_obj <- LoadH5Seurat("GSE206299_ircolitis-tissue-cd4.h5seurat")
seurat_obj <- LoadH5Seurat("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5seurat")
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
?LoadH5AD
??LoadH5AD
SeuratDisk
?SeuratDisk
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
install.packages("anndata")
anndata <- import("anndata")
anndata <- reticulate::import("anndata")
anndata <- reticulate::import("anndata")
library(Seurat)
library(SeuratObject)
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- LoadH5AD("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
library(anndata)
h5ad_file <- "C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad"
seurat_obj <- read_h5ad("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2/Data/GSE206299_ircolitis-tissue-cd4.h5ad")
adata = seurat_obj
genes = adata$var
genes = adata$var_names
genes
meta = adata$obs
View(meta)
mtx = adata$X
View(meta)
library(Seurat)
library(SeuratObject)
library(ggplot2)
library(rhdf5)
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/All Genes/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
getwd()
setwd("C:/EsmaeilscRNA-seqSingle-Cell-Pipeline-in-RPart2")
setwd("C:/EsmaeilscRNA-seqSingle-Cell-Pipeline-in-R/Part2")
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Part2")
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/All Genes/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 0 2 5 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(0, 2, 5, 6, 8, 9, 10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] <= 1, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP33.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] <= 1, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP33.png", width = 7000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code changes the label of cluster cluster 4 to cluster 2  and cluster 7 to cluster 3
#  and then generates and saves a UMAP plot of the modified dataset.
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "4"] <- "2"
cluster_ids[cluster_ids == "7"] <- "3"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP4.png", width = 10000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 2/3_The Seurat object obtained after FindNeighbors and FindClusters/All Genes/merged_obj1")
getwd()
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 9000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
png(filename = "FeaturePlot.png", width = 9000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 0 2 5 6 8 9 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(0, 2, 5, 6, 8, 9, 10), invert = TRUE)
png(filename = "UMAP2.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[umap_coord[, "umap_1"] <= 1, ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP3.png", width = 7000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code changes the label of cluster 7 to cluster 2
#  and then generates and saves a UMAP plot of the modified dataset.
cluster_ids <- as.character(Idents(merged_obj1))
cluster_ids[cluster_ids == "7"] <- "2"
Idents(merged_obj1) <- cluster_ids
png(filename = "UMAP4.png", width = 7000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("1", "2", "3", "4")
desired_order <- c("1", "2", "3", "4")
Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
png(filename = "UMAP5.png", width = 7000, height = 4000, units = "px", res = 600)
DimPlot(merged_obj1, label = TRUE)
dev.off()
saveRDS(file = "merged_obj1",merged_obj1)
merged_obj2 = merged_obj1
################################################################################ Start Extracting and saving Seurat objects for each sample
samples <- unique(merged_obj2$orig.ident)
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj2, subset = orig.ident == sample_name)
assign(paste0("seurat_obj_", i), seurat_obj)
}
# 5
# GSE206299_seurat_objs
seurat_objs <- list(seurat_obj_1, seurat_obj_2, seurat_obj_3, seurat_obj_4, seurat_obj_5,
seurat_obj_6, seurat_obj_7, seurat_obj_8, seurat_obj_9, seurat_obj_10,
seurat_obj_11, seurat_obj_12, seurat_obj_13, seurat_obj_14, seurat_obj_15,
seurat_obj_16, seurat_obj_17, seurat_obj_18, seurat_obj_19, seurat_obj_20,
seurat_obj_21, seurat_obj_22, seurat_obj_23, seurat_obj_24, seurat_obj_25,
seurat_obj_26, seurat_obj_27, seurat_obj_28, seurat_obj_29, seurat_obj_30)
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("seurat_obj_", i, ".rds"))
}
################################################################################ End Extracting and saving Seurat objects for each sample
merged_obj = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/2_The Seurat object obtained after IntegrateLayers/All Genes/merged_obj")
merged_obj[["RNA"]] <- JoinLayers(merged_obj[["RNA"]])
################################################################################ End integration
merged_obj1 = merged_obj
################################################################################ Start UMAP
# png(filename = "ElbowPlot2.png",width = 10000,height=4000,units ="px",res = 600)
# ElbowPlot(merged_obj,ndims = 50)
# dev.off()
merged_obj1=FindNeighbors(merged_obj1,dims = 1:30,reduction = "integrated.cca")
merged_obj1=FindClusters(merged_obj1,resolution = 0.2)
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/integrated_obj Data")
saveRDS(file = "merged_obj1",merged_obj1)
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(11), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# UMAP projection of all cells colored by their original sample ID (orig.ident).
png(filename = "UMAP3.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, group.by = "orig.ident")
dev.off()
# UMAP projection split by original sample ID. Each panel shows the cells of one sample with their spatial distribution in the integrated UMAP space.
png(filename = "UMAP4.png",width = 28000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, split.by = "orig.ident")
dev.off()
merged_obj2 = merged_obj1
saveRDS(file = "merged_obj2",merged_obj2)
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(10), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
merged_obj1 = LoadSeuratRds(file = "C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Part 1/3_The Seurat object obtained after FindNeighbors and FindClusters/All Genes/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP1.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove clusters 11
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(11), invert = TRUE)
png(filename = "UMAP2.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 5.
# umap_data <- Embeddings(merged_obj1)
# cells_to_keep <- rownames(umap_data[umap_data[, "integratedcca_1"] <= 5, ])
# merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
# png(filename = "UMAP3.png",width = 10000,height=8000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code combines clusters 1 and 8 into a single cluster labeled "1" and then generates and saves a UMAP plot of the modified dataset.
# merged_clusters <- as.character(Idents(merged_obj1))
# merged_clusters[merged_clusters == "1" | merged_clusters == "8"] <- "1"
# Idents(merged_obj1) <- merged_clusters
# png(filename = "UMAP4.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code changes the label of cluster 9 to cluster 8 and then generates and saves a UMAP plot of the modified dataset.
# cluster_ids <- as.character(Idents(merged_obj1))
# cluster_ids[cluster_ids == "9"] <- "8"
# Idents(merged_obj1) <- cluster_ids
# png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3", "4", "5", "6", "7", "8")
# desired_order <- c("0", "1", "2", "3", "4", "5", "6", "7", "8")
# Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
# png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# UMAP projection of all cells colored by their original sample ID (orig.ident).
png(filename = "UMAP3.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, group.by = "orig.ident")
dev.off()
# UMAP projection split by original sample ID. Each panel shows the cells of one sample with their spatial distribution in the integrated UMAP space.
png(filename = "UMAP4.png",width = 28000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, split.by = "orig.ident")
dev.off()
png(filename = "FeaturePlot.png", width = 10000, height = 4000, units = "px", res = 600)
FeaturePlot(merged_obj1, features = c("CD3D", "CD3E", "CD3G", "LYZ", "CD78A"))
dev.off()
# Remove clusters 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(10), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
s=merged_obj1
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] >= -9 & umap_data[, "umap_2"] >= 0.5, ])
umap_data <- Embeddings(merged_obj1)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] >= -9 & umap_data[, "umap_2"] >= 0.5, ])
View(umap_data)
merged_obj1 = s
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
merged_obj1 = s
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[!(umap_coord[, "umap_1"] < -9 & umap_coord[, "umap_2"] < 0.5), ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj1 = s
# Remove cells with an x-axis value less than -11 and y-axis value less than 1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[!(umap_coord[, "umap_1"] < -11 & umap_coord[, "umap_2"] < 1), ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, label = TRUE)
dev.off()
# Remove cells with an x-axis value less than -11 and y-axis value less than -1.
umap_coord <- merged_obj1@reductions[["umap"]]@cell.embeddings
cells_to_keep <- rownames(umap_coord[!(umap_coord[, "umap_1"] < -11 & umap_coord[, "umap_2"] < -1), ])
merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, label = TRUE)
dev.off()
merged_obj2 = merged_obj1
saveRDS(file = "merged_obj2",merged_obj2)
samples <- unique(merged_obj2$orig.ident)
for (i in seq_along(samples)) {
sample_name <- samples[i]
seurat_obj <- subset(merged_obj2, subset = orig.ident == sample_name)
assign(paste0("srobj_", i), seurat_obj)
}
# 5
# 5_GSE144469_seurat_objs
seurat_objs <- list(srobj_1, srobj_2, srobj_3, srobj_4, srobj_5,
srobj_6, srobj_7, srobj_8, srobj_9, srobj_10,
srobj_11, srobj_12, srobj_13, srobj_14, srobj_15,
srobj_16, srobj_17, srobj_18, srobj_19, srobj_20,
srobj_21, srobj_22)
# Loop to save each Seurat object
for (i in 1:length(seurat_objs)) {
saveRDS(seurat_objs[[i]], file = paste0("srobj_", i, ".rds"))
}
View(srobj_13)
seurat_objssss <- list(srobj_1, srobj_2, srobj_3, srobj_4, srobj_5,
srobj_6, srobj_7, srobj_8, srobj_9, srobj_10,
srobj_11, srobj_12, srobj_13, srobj_14, srobj_15,
srobj_16, srobj_17, srobj_18, srobj_19, srobj_20,
srobj_21, srobj_22)
View(seurat_objssss)
merged_obj1
View(merged_obj1)
View(merged_obj1)
