setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/Significant Gene Discovery")
# # Split marker genes by cluster and export each cluster to a separate sheet in an Excel file
###################################################################################################
library(dplyr)
library(writexl)
data <- read.csv("AllMarkers.csv")
clusters <- unique(data$cluster)
sheets <- list()
for (cl in clusters) {
sheets[[paste0("Cluster_", cl)]] <- filter(data, cluster == cl)
}
write_xlsx(sheets, path = "clustered_output.xlsx")
library(openxlsx)
input_file <- "clustered_output.xlsx"
output_file <- "filtered_output.xlsx"
sheet_names <- getSheetNames(input_file)
wb <- createWorkbook()
for (sheet_name in sheet_names) {
data <- read.xlsx(input_file, sheet = sheet_name)
filtered_data <- subset(data,
p_val < 0.05 &
avg_log2FC > 0.1 &
pct.1 > 0.1 &
(pct.1 - pct.2) > 0.1)
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = filtered_data)
}
saveWorkbook(wb, output_file, overwrite = TRUE)
setwd("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/Annotation")
library(readxl)
library(openxlsx)
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
filtered_data_sheets <- excel_sheets(filtered_file_path)
df <- read_excel(target_file_path)
wb <- createWorkbook()
for (sheet_name in filtered_data_sheets) {
cluster_data <- read_excel(filtered_file_path, sheet = sheet_name)
cluster_genes <- cluster_data$gene
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
for (col_name in colnames(df)) {
values <- df[[col_name]]
matched_genes <- values[values %in% cluster_genes]
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = results)
}
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
library(readxl)
library(openxlsx)
filtered_file_path <- "filtered_output.xlsx"
target_file_path <- "1.xlsx"
filtered_data_sheets <- excel_sheets(filtered_file_path)
df <- read_excel(target_file_path)
wb <- createWorkbook()
for (sheet_name in filtered_data_sheets) {
cluster_data <- read_excel(filtered_file_path, sheet = sheet_name)
cluster_genes <- cluster_data$gene
results <- data.frame(
Column = character(),
Match_Count = numeric(),
Total_Genes = numeric(),
Match_Percentage = numeric(),
Matched_Genes = character(),
stringsAsFactors = FALSE
)
for (col_name in colnames(df)) {
values <- df[[col_name]]
matched_genes <- values[values %in% cluster_genes]
match_count <- length(matched_genes)
total_genes <- sum(!is.na(values) & values != "")
percentage <- ifelse(total_genes > 0, (match_count / total_genes) * 100, NA)
matched_genes_str <- paste(matched_genes, collapse = ", ")
results <- rbind(results, data.frame(
Column = col_name,
Match_Count = match_count,
Total_Genes = total_genes,
Match_Percentage = round(percentage, 2),
Matched_Genes = matched_genes_str
))
}
addWorksheet(wb, sheet_name)
writeData(wb, sheet = sheet_name, x = results)
}
output_file <- "Cluster_Markers.xlsx"
saveWorkbook(wb, output_file, overwrite = TRUE)
setwd("C:/Esmaeil/scRNA-seq/Single-Cell-Pipeline-in-R/integrated_obj Data")
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj2)
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj2)
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
library(Seurat)
library(SeuratObject)
library(ggplot2)
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers")
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj2 <- RenameIdents(merged_obj3, new_cluster_ids)
# Remove clusters 9
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(9), invert = TRUE)
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
# Remove clusters 9
merged_obj3 <- subset(merged_obj1, subset = seurat_clusters %in% c(9), invert = TRUE)
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP_CellType_Annotated_AllSamples.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,reduction = "integrated.cca",label = TRUE)
dev.off()
getwd()
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
library(Seurat)
library(SeuratObject)
library(ggplot2)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
png(filename = "UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "integrated.cca",label = TRUE)
dev.off()
png(filename = "UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
png(filename = "First_UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
png(filename = "First_UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
png(filename = "First_UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP_CellType_Annotated.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "integratedcca_1"] <= 13, ])
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "UMAP_1"] <= 13, ])
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] <= 13, ])
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] <= 12, ])
umap_data[, "umap_1"]
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] <= 12, ])
# Remove cells with an x-axis value greater than 5.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] <= 10, ])
umap_data <- Embeddings(merged_obj3)
View(umap_data)
umap_data[umap_data[, "umap_1"]
print(umap_data[umap_data[, "umap_1"])
print("umap_data[umap_data[, "umap_1"]")
merged_obj1 = LoadSeuratRds("C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[, "umap_1"] <= 5, ])
# Remove cells with an x-axis value greater than 12.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[,1] <= 13, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=8000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[,1] <= 13, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_data <- Embeddings(merged_obj3)
cells_to_keep <- rownames(umap_data[umap_data[,1] <= 15, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
# بررسی نام ستون‌ها
colnames(umap_df)
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 12, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3_filtered, reduction = "umap")
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
s3=merged_obj3
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 12, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3_filtered, reduction = "umap")
s3=merged_obj3
merged_obj3=s3
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 12, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap")
dev.off()
merged_obj3 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/5_The Seurat object obtained after FindAllMarkers/merged_obj3")
s3=merged_obj3
# Remove clusters 9
merged_obj3 <- subset(merged_obj3, subset = seurat_clusters %in% c(9), invert = TRUE)
png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 12, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap")
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 11.5, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap")
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 11.5, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap",label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 11.5, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 8000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap",label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 12.
umap_df <- as.data.frame(Embeddings(merged_obj3, reduction = "umap"))
cells_to_keep <- rownames(umap_df[umap_df$umap_1 < 11.5, ])
merged_obj3 <- subset(merged_obj3, cells = cells_to_keep)
png(filename = "UMAP6.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3, reduction = "umap",label = TRUE)
dev.off()
new_cluster_ids <- c(
"NK | CD8 TRM",
"CD4 EM",
"Naïve",
"Gamma Delta | CD8+ GDTcells",
"CD4_Tregs",
"CD8 EM | CD8 cytotoxic",
"CD4_Th17",
"Proliferating T cells | Cell cycle",
"FOXP3- Tregs",
"Dendrtitic cells | Monocytes | Plasma cells X"
)
names(new_cluster_ids) <- levels(merged_obj3)
merged_obj3 <- RenameIdents(merged_obj3, new_cluster_ids)
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE)
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 10)
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3)
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3) +
theme(legend.text = element_text(size = 3))
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3) +
theme(legend.text = element_text(size = 6))
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3) +
theme(legend.text = element_text(size = 7))
dev.off()
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
# UMAP projection of all cells colored by their original sample ID (orig.ident).
png(filename = "UMAP333.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, group.by = "orig.ident")
dev.off()
merged_obj1 = LoadSeuratRds(file="C:/Esmaeil/scRNA-seq/Backup of Local Data and Files Not on GitHub/3_The Seurat object obtained after FindNeighbors and FindClusters/merged_obj1")
merged_obj1=RunUMAP(merged_obj1,dims = 1:30, reduction = "integrated.cca")
png(filename = "UMAP11.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove clusters 10
merged_obj1 <- subset(merged_obj1, subset = seurat_clusters %in% c(10), invert = TRUE)
png(filename = "UMAP22.png",width = 10000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1,label = TRUE)
dev.off()
# Remove cells with an x-axis value greater than 5.
# umap_data <- Embeddings(merged_obj1)
# cells_to_keep <- rownames(umap_data[umap_data[, "integratedcca_1"] <= 5, ])
# merged_obj1 <- subset(merged_obj1, cells = cells_to_keep)
# png(filename = "UMAP3.png",width = 10000,height=8000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code combines clusters 1 and 8 into a single cluster labeled "1" and then generates and saves a UMAP plot of the modified dataset.
# merged_clusters <- as.character(Idents(merged_obj1))
# merged_clusters[merged_clusters == "1" | merged_clusters == "8"] <- "1"
# Idents(merged_obj1) <- merged_clusters
# png(filename = "UMAP4.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code changes the label of cluster 9 to cluster 8 and then generates and saves a UMAP plot of the modified dataset.
# cluster_ids <- as.character(Idents(merged_obj1))
# cluster_ids[cluster_ids == "9"] <- "8"
# Idents(merged_obj1) <- cluster_ids
# png(filename = "UMAP5.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# This code reorders the cluster identities in the Seurat object (merged_obj1) according to the specified order ("0", "1", "2", "3", "4", "5", "6", "7", "8")
# desired_order <- c("0", "1", "2", "3", "4", "5", "6", "7", "8")
# Idents(merged_obj1) <- factor(Idents(merged_obj1), levels = desired_order)
# png(filename = "UMAP6.png",width = 10000,height=4000,units ="px",res = 600 )
# DimPlot(merged_obj1,label = TRUE)
# dev.off()
# UMAP projection of all cells colored by their original sample ID (orig.ident).
png(filename = "UMAP33.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj1, group.by = "orig.ident")
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 4) +
theme(legend.text = element_text(size = 8))
dev.off()
png(filename = "UMAP7.png",width = 7000,height=4000,units ="px",res = 600 )
DimPlot(merged_obj3,label = TRUE,label.size = 3) +
theme(legend.text = element_text(size = 8))
dev.off()
